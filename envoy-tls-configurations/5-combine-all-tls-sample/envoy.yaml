admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address: { address: 0.0.0.0, port_value: 9901 }

static_resources:
  secrets:
    # mTLS
    - name: mtls_server_cert
      tls_certificate:
        certificate_chain:
          filename: /certs/mtls/server/server.crt
        private_key:
          filename: /certs/mtls/server/server.key
    - name: mtls_client_ca_cert
      validation_context:
        trusted_ca:
          filename: /certs/mtls/client/ca.crt
    # TLS
    - name: tls_server_cert
      tls_certificate:
        certificate_chain:
          filename: /certs/tls/server.crt
        private_key:
          filename: /certs/tls/server.key
    # TLS Origination
    - name: origination_server_cert
      tls_certificate:
        certificate_chain:
          filename: /certs/origination/server.crt
        private_key:
          filename: /certs/origination/server.key
    - name: origination_client_cert
      tls_certificate:
        certificate_chain:
          filename: /certs/origination/products-https/client.crt
        private_key:
          filename: /certs/origination/products-https/client.key

  listeners:
    - name: http_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 9080 }
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: products_http_service }
                http_filters:
                  - name: envoy.filters.http.router

    - name: https_listener
      address:
        socket_address: { address: 0.0.0.0, port_value: 9443 }
      filter_chains:
        # filter chain for "mtls.ingress.com"
        - filter_chain_match:
            server_names:
              - "mtls.ingress.com"
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: products_http_service }
                http_filters:
                  - name: envoy.filters.http.router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              require_client_certificate: true
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  - name: mtls_server_cert
                validation_context_sds_secret_config:
                  name: mtls_client_ca_cert

        # filter chain for "tls.ingress.com"
        - filter_chain_match:
            server_names:
              - "tls.ingress.com"
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: products_http_service }
                http_filters:
                  - name: envoy.filters.http.router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  - name: tls_server_cert

        # filter chain for "passthrough.ingress.com"
        - filter_chain_match:
            server_names:
              - "passthrough.ingress.com"
          filters:
            - name: envoy.filters.network.tcp_proxy
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.tcp_proxy.v3.TcpProxy
                stat_prefix: tcp
                cluster: products_https_passthrough_service

        # filter chain for "origination.ingress.com" - TLS origination with TLS termination
        - filter_chain_match:
            server_names:
              - "origination.ingress.com"
          filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                codec_type: AUTO
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/" }
                          route: { cluster: products_https_service }
                http_filters:
                  - name: envoy.filters.http.router
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_certificate_sds_secret_configs:
                  - name: origination_server_cert

  clusters:
    # No TLS
    - name: products_http_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: products_http_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: products_http_service
                      port_value: 8080

    # TLS Origination
    - name: products_https_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: products_https_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: products_https_service
                      port_value: 8443
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: ingress.com
          common_tls_context:
            tls_certificate_sds_secret_configs:
              - name: origination_client_cert

    # TLS Passthrough
    - name: products_https_passthrough_service
      connect_timeout: 0.25s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: products_https_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: products_https_service
                      port_value: 8443
